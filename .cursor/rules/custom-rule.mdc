---
description: 
globs: *.go,*.sql,*.proto,*.toml,*.ts,*.jsx,*.html,*.css
alwaysApply: false
---
---
description: 
globs: backend/**,frontend/**
alwaysApply: false
---
Tech stack: Go, React, sqlite
Reporsitory structure
.
|-- LICENSE
|-- README.md
|-- TODO.md
|-- backend
|   |-- Dockerfile
|   |-- commentservice
|   |   |-- api
|   |   |   |-- api.go
|   |   |   `-- api_test.go
|   |   |-- autogenerate.go
|   |   |-- config
|   |   |   `-- config.go
|   |   |-- db
|   |   |   |-- db.go
|   |   |   |-- migrate.go
|   |   |   |-- migrations
|   |   |   |   |-- 1_init.up.sql
|   |   |   |   |-- 2_add_username_in_comments_table.up.sql
|   |   |   |   |-- 3_update_comment_foreign_key.up.sql
|   |   |   |   `-- 4_drop_users_table.up.sql
|   |   |   |-- models.go
|   |   |   |-- querier.go
|   |   |   |-- queries.sql.go
|   |   |   `-- scripts
|   |   |       |-- queries.sql
|   |   |       `-- sqlc.yaml
|   |   |-- go.mod
|   |   `-- proto
|   |       |-- commentservice.pb.go
|   |       `-- commentservice_grpc.pb.go
|   |-- common
|   |   |-- auth
|   |   |   |-- auth.go
|   |   |   `-- firebase.go
|   |   |-- constants
|   |   |   `-- constants.go
|   |   |-- go.mod
|   |   |-- go.sum
|   |   |-- interceptors
|   |   |   |-- auth.go
|   |   |   `-- panic_recovery.go
|   |   `-- validation
|   |       |-- email_validation.go
|   |       |-- email_validation_test.go
|   |       `-- string_validations.go
|   |-- db.sqlite
|   |-- go.mod
|   |-- go.sum
|   |-- go.work
|   |-- go.work.sum
|   |-- mono
|   |   |-- config
|   |   |   `-- config.go
|   |   |-- db.sqlite
|   |   |-- functions
|   |   |-- go.mod
|   |   |-- go.sum
|   |   |-- main.go
|   |   |-- version
|   |   |   |-- version.githash
|   |   |   |-- version.go
|   |   |   `-- version.number
|   |   `-- webapp
|   |       `-- dist
|   |           `-- README.md
|   |-- uploads
|   |-- userservice
|   |   |-- api
|   |   |   `-- api.go
|   |   |-- autogenerate.go
|   |   |-- config
|   |   |   `-- config.go
|   |   |-- db
|   |   |   |-- db.go
|   |   |   |-- migrate.go
|   |   |   |-- migrations
|   |   |   |   `-- 1_init.up.sql
|   |   |   |-- models.go
|   |   |   |-- queries.sql.go
|   |   |   `-- scripts
|   |   |       |-- queries.sql
|   |   |       `-- sqlc.yaml
|   |   |-- go.mod
|   |   `-- proto
|   |       |-- userservice.pb.go
|   |       `-- userservice_grpc.pb.go
|   `-- videoservice
|       |-- api
|       |   |-- api.go
|       |   |-- http.go
|       |   `-- http_test.go
|       |-- autogenerate.go
|       |-- config
|       |   `-- config.go
|       |-- db
|       |   |-- db.go
|       |   |-- migrate.go
|       |   |-- migrations
|       |   |   |-- 1_init.up.sql
|       |   |   `-- 2_add_uploaded_user.up.sql
|       |   |-- models.go
|       |   |-- queries.sql.go
|       |   `-- scripts
|       |       |-- queries.sql
|       |       `-- sqlc.yaml
|       |-- go.mod
|       |-- go.sum
|       |-- processing
|       `-- proto
|           |-- videoservice.pb.go
|           `-- videoservice_grpc.pb.go
|-- deploy
|   |-- Dockerfile
|   |-- prod
|   |   `-- fly.toml
|   `-- staging
|       `-- fly.toml
|-- docs
|   |-- html5-mediasource.md
|   `-- info-blob
|       |-- about-video-streaming-in-browser.md
|       `-- video-html5.excalidraw.png
|-- frontend
|   `-- webapp
|       |-- README.md
|       |-- dist
|       |   |-- assets
|       |   |   |-- index-CvPl-NUa.js
|       |   |   `-- index-hPH7Cqbi.css
|       |   |-- index.html
|       |   `-- vite.svg
|       |-- eslint.config.js
|       |-- index.html
|       |-- package.json
|       |-- pnpm-lock.yaml
|       |-- public
|       |   `-- vite.svg
|       |-- src
|       |   |-- App.css
|       |   |-- App.jsx
|       |   |-- assets
|       |   |   `-- react.svg
|       |   |-- auth
|       |   |   |-- components
|       |   |   |   `-- ProtectedRoute.jsx
|       |   |   |-- pages
|       |   |   |   `-- LoginPage.jsx
|       |   |   |-- providers
|       |   |   |   `-- firebase-auth.ts
|       |   |   |-- store
|       |   |   |   `-- auth.ts
|       |   |   `-- utils
|       |   |-- components
|       |   |   |-- CommentSection.tsx
|       |   |   |-- ListOfVideos.jsx
|       |   |   |-- ScreenRecorder.jsx
|       |   |   `-- layout
|       |   |       |-- Footer.jsx
|       |   |       |-- Header.jsx
|       |   |       |-- Layout.jsx
|       |   |       `-- Sidebar.jsx
|       |   |-- index.css
|       |   |-- main.jsx
|       |   |-- pages
|       |   |   |-- HomePage.jsx
|       |   |   |-- Library.jsx
|       |   |   |-- ProfilePage.jsx
|       |   |   |-- RecordPage.jsx
|       |   |   |-- SettingsPage.jsx
|       |   |   |-- TeamPage.jsx
|       |   |   |-- UploadPage.jsx
|       |   |   |-- VideoPage.jsx
|       |   |   `-- VideosPage.jsx
|       |   |-- proto
|       |   |   |-- commentservice.ts
|       |   |   |-- google
|       |   |   |   `-- protobuf
|       |   |   |       `-- timestamp.ts
|       |   |   `-- videoservice.ts
|       |   |-- stores
|       |   |   |-- comments.ts
|       |   |   `-- videos.ts
|       |   |-- version
|       |   |   |-- get-git-hash.cjs
|       |   |   |-- version.number
|       |   |   `-- versionInfo.ts
|       |   `-- vite-env.d.ts
|       |-- tailwind.config.js
|       |-- tsconfig.json
|       |-- tsconfig.node.json
|       `-- vite.config.js
|-- package-lock.json
|-- proto
|   |-- commentservice.proto
|   `-- videoservice.proto

Existing database tables schema:
CREATE TABLE userservice_users (
    id TEXT PRIMARY KEY,
    username TEXT NOT NULL,
    email TEXT UNIQUE NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
)


CREATE TABLE comment_likes (
    id TEXT PRIMARY KEY,
    user_id TEXT NOT NULL,
    comment_id TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
)


CREATE TABLE "comments" (
    id TEXT PRIMARY KEY,
    content TEXT NOT NULL,
    video_id TEXT NOT NULL,
    user_id TEXT NOT NULL,
    parent_comment_id TEXT,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    username TEXT
)

CREATE TABLE videos (
    id TEXT PRIMARY KEY,
    title TEXT NOT NULL,
    description TEXT NOT NULL,
    url TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
, uploaded_user_id TEXT NOT NULL, updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP)

---------
Existing features:
1. Login using firebase auth
2. User can record screen and upload
3. User can upload local videos
4. List videos
5. Play video
6. Add comment to video

---------
When we implement new feature, we can start updating proto files in root level "proto" folder. Once we made proto changes, then we can make changes in respective backend service folder, by adding migrations, scripts/queries.sql. 
Then ask me to run 'go generate' in respective service folder in backend, I will run, it will auto generate few files. We just have to write code using these auto generated method. Example, we may update api.go etc..



