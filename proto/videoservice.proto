syntax = "proto3";

package videoservice;

option go_package = "sortedstartup.com/stream/videoservice/proto";

import "google/protobuf/timestamp.proto";
// please ignore import error, go generate will run properly
import "userservice.proto";

service VideoService {
  // Core video operations
  rpc CreateVideo(CreateVideoRequest) returns (Video);
  rpc GetVideo(GetVideoRequest) returns (Video);
  rpc ListVideos(ListVideosRequest) returns (ListVideosResponse);
  rpc UpdateVideo(UpdateVideoRequest) returns (Video);
  rpc DeleteVideo(DeleteVideoRequest) returns (Empty);

  // Sharing
  rpc ShareVideo(ShareVideoRequest) returns (ShareLink);
}

service ChannelService {
  rpc CreateChannel(CreateChannelRequest) returns (CreateChannelResponse);
  rpc UpdateChannel(UpdateChannelRequest) returns (UpdateChannelResponse);
  rpc GetChannels(GetChannelsRequest) returns (GetChannelsResponse);
  rpc GetMembers(GetChannelMembersRequest) returns (GetChannelMembersResponse);
  rpc AddMember(AddChannelMemberRequest) returns (AddChannelMemberResponse);
  rpc RemoveMember(RemoveChannelMemberRequest) returns (RemoveChannelMemberResponse);
}

message Video {
  string id = 1;
  string title = 2;
  string description = 3;
  string user_id = 4;
  string url = 5;
  string thumbnail_url = 6;
  VideoStatus status = 7;
  Visibility visibility = 8;
  google.protobuf.Timestamp created_at = 9;
}

enum VideoStatus {
  STATUS_UNSPECIFIED = 0;
  STATUS_PROCESSING = 1;
  STATUS_READY = 2;
  STATUS_FAILED = 3;
}

enum Visibility {
  VISIBILITY_PRIVATE = 0;
  VISIBILITY_SHARED = 1;
  VISIBILITY_PUBLIC = 2;
}

message CreateVideoRequest {
  string title = 1;
  string description = 2;
  string url = 3;
  Visibility visibility = 4;
}

message GetVideoRequest {
  string video_id = 1;
}

message ListVideosRequest {
  // user id is implicit from auth context
  int32 pageSize = 2;
  int32 pageNumber = 3;
  string channel_id = 4; // Optional: filter by channel within tenant
  // tenant_id comes from x-tenant-id header, not request body
}

message ListVideosResponse {
  repeated Video videos = 1;
}

message UpdateVideoRequest {
  string video_id = 1;
  string title = 2;
  string description = 3;
  Visibility visibility = 4;
}

message DeleteVideoRequest {
  string video_id = 1;
}

message ShareVideoRequest {
  string video_id = 1;
}

message ShareLink {
  string id = 1;
  string url = 2;
}

message Empty {}

message Channel {
  string id = 1;
  string tenant_id = 2;
  string name = 3;
  string description = 4;
  string created_by = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
  string user_role = 9; // Current user's role in this channel: owner, uploader, viewer
  int32 member_count = 10; // Number of members (only populated for owners)
}

message ChannelMember {
  userservice.User user = 1;
  string role = 2; // owner, uploader, viewer
  string added_by = 3;
  google.protobuf.Timestamp created_at = 4;
}

message CreateChannelRequest {
  string name = 2;
  string description = 3;
}

message CreateChannelResponse {
  string message = 1;
  Channel channel = 2;
}

message UpdateChannelRequest {
  string channel_id = 2;
  string name = 3;
  string description = 4;
}

message UpdateChannelResponse {
  string message = 1;
  Channel channel = 2;
}

message GetChannelsRequest {
}

message GetChannelsResponse {
  string message = 1;
  repeated Channel channels = 2;
}

message GetChannelMembersRequest {
  string channel_id = 2;
}

message GetChannelMembersResponse {
  string message = 1;
  repeated ChannelMember channel_members = 2;
}

message AddChannelMemberRequest {
  string channel_id = 2;
  string user_id = 3;
  string role = 4; // owner, uploader, viewer
}

message AddChannelMemberResponse {
  string message = 1;
}

message RemoveChannelMemberRequest {
  string channel_id = 2;
  string user_id = 3;
}

message RemoveChannelMemberResponse {
  string message = 1;
}